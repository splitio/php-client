8.0.0 (Feb XX, 2023)
 - BREAKING CHANGE: Removed support from versions older than PHP 7.4.
 - BREAKING CHANGE: Added support for Multiple Factory Instantiation.

7.2.0 (Jan 24, 2024)
 - Added support for Flag Sets on the SDK, which enables grouping feature flags and interacting with the group rather than individually (more details in our documentation):
  - Added new variations of the get treatment methods to support evaluating flags in given flag set/s.
   - getTreatmentsByFlagSet and getTreatmentsByFlagSets
   - getTreatmentWithConfigByFlagSets and getTreatmentsWithConfigByFlagSets
  - Added `defaultTreatment` and `sets` properties to the `SplitView` object returned by the `split` and `splits` methods of the SDK manager.

7.1.8 (Jul 24, 2023)
 - Fixed input validation for empty keys.

7.1.7 (May 16, 2023)
 - Updated terminology on the SDKs codebase to be more aligned with current standard without causing a breaking change. The core change is the term split for feature flag on things like logs and phpdoc comments.
 - Fixed php 8.2 warnings in code.

7.1.6 (Feb 14, 2023)
 - Fixed logging on array conversion.

7.1.5 (Oct 28, 2022)
 - Updated phpdocs for `ClientInterface`.

7.1.4 (Sep 6, 2022)
 - Updated dependencies to allow `psr/log` 2 and 3.
 - Removed `phpdocumentor/phpdocumentor` dependency.
 - Added `PSR3LoggerAdapter` to support `psr/log: 1 - 3` versions.

7.1.3 (Aug 24, 2022)
 - Updated `predis` dependency to `^2.0`.

7.1.2 (May 24, 2022)
 - Updated validations to comply with PHP8's stricter type validations.

7.1.1 (March 28, 2022)
 - Removed unused logic for HTTP and requests dependency.
 - Removed all producer logic for Storages.
 - Added SafeRedisWrapper for handling exception in Redis.
 - Added `.gitattributes` for excluding `tests/.` and other files for composer package.
 - Fixed typos in `Splitter.php` and CONTRIBUTORS-GUIDE.

7.1.0 (Dec 3, 2021)
 - Added a new option to use when running Redis in cluster mode called `keyHashTags` which receives a list of hashtags from which the SDK will randomly pick one to use on the generated instance.

7.0.0 (Nov 23, 2021)
 - BREAKING CHANGE: Removed support from versions older than PHP 7.3.
 - BREAKING CHANGE: Removed SharedMemory (shmop) component for Segments.
 - PHP 8 Compatibility: made Di methods public.
 - Upgraded dependencies.

6.2.5 (Apr 27, 2021)
 - Added delimiter in SharedMemory Cache.

6.2.4 (Mar 20, 2020)
 - Added missing methods in ClientInterface.

6.2.3 (Nov 1, 2019)
 - Added flag `IPAddressesEnabled` into options to enable/disable sending MachineName and MachineIP when data is posted in headers.

6.2.2 (Sep 18, 2019)
 - Fetch multiple feature flags at once on getTreatments/getTreatmentsWithConfig
 - Removed MatcherClient (DependencyMatcher now uses Evaluator directly)
 - Removed shared memory.
 - Several code cleanups

6.2.1 (Jul 12, 2019)
 - Verified TLS support for redis and validated config options
 - Support newer versions of symfony/yaml

6.2.0 (May 30, 2019)
 - Added validation for TrafficType in track calls.
 - Added validation when feature flag does not exist on treatments and manager calls.
 - Added multiple factory instantiation check.
 - Removed producer modules.
 - Added properties to track method.

6.1.0 (April 30, 2019)
 - Added getTreatmentWithConfig and getTreatmentsWithConfig methods.
 - Added support for YAML files for Localhost mode.

6.0.0 (Feb 8, 2019)
 - Updated Input Sanitization.
 - BREAKING CHANGE: Moved Impressions to single queue approach.

5.7.1 (Dec 20, 2018)
 - Fixed traffic allocation issue on 1%.

5.7.0 (Nov 14, 2018)
 - Added support for redis cluster.

5.6.0 (Oct 23, 2018)
 - Added getTreatments method.

5.5.1 (Oct 9, 2018)
 - Added validation for ipAddress.

5.5.0 (Sep 25, 2018)
 - Added custom impression listener feature.
 - Input Sanitization for track, getTreatment and split.

5.4.0 (Aug 29, 2018)
 - Added support for redis with sentinel replication

5.3.1: (Apr 4, 2018)
 - Force key data type to be a string

5.3.0: (Feb 8, 2018)
 - Split client supports .track method (events)

5.2.4: (Sep 13, 2017)
 - Downgrade logging level for shared memory messages

5.2.3: (Sep 5, 2017)
 - Adding hotfix to return empty feature flags array in SplitManager when redis is empty.

5.2.2: (Aug 1, 2017)
 - Adding hotfix to return CONTROL if redis is down instead of failing.

5.2.1: (Jul 28, 2017)
 - Adding hotfix for manager->getTreatments()

5.2.0: (Jul 26, 2017)
 - Adding support for regex & boolean matcher

5.1.0: (Jul 20, 2017)
 - Adding support for dependency matcher

5.0.0 (Jun 13, 2017)
 - Adding support for Split Synchronizer service

4.1.0 (May 16, 2017)
 - Adding support for String and Set Matchers

4.0.2 (May 8, 2017)
 - Adding support for Traffic Allocation
 - Fixing stdout log blocker on synchronizer when run as service

4.0.1 (April 20, 2017)
 - Renaming Void log handler to get PHP 7.1 compatibility

4.0.0 (April 17, 2017)
 - Added support for murmur3 hashing
 - Fixed result "control" when invalid matchers are used for evaluation

3.1.3
 - Modified predis version to ^1.0

3.1.2
 - Modified stdout logger handler
 - Added "echo" logger handler

3.1.1
 - Set syslog as default log adapter
 - Added "void" log adapter

3.1.0
 - Added enabled labels
 - Added impressions by sdk and version including bucketing key

3.0.0
 - Added SDK Factory Method with Manager API and Sdk Client
 - Added Bucketing key support
 - Merging the branch php 5.5 and php 5.3 to get only one SDK version which support PHP >= 5.3.9
 - Added support for Block Until Redy
 - Removed php serialization at Redis cache to support Cache cross SDK spec
 - Fixed push impressions minor bug using redis prefix

2.1.1
 - Added Events endpoint support in binary splitio.phar
 - Fixed Standard messages in binary splitio.phar

2.1.0
 - Added PRedis Adapter support

2.0.0
 - Added attributes support

1.0.1
 - The Segment evaluation has benn added into a shared memory block to improve the performance.
 - The Feature specification is stored in shared memory in order to improve the evaluation performance.
 - Metrics and impressions are dropped from cache after send it, despite of response status.
 - The service output will be send only in verbose mode (-v parameter).
